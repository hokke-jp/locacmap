<div class="w-full h-smartphone-screen lg:h-pc-screen">
  <div id='main-map' style="height: 100%"></div>
</div>
<div id="latlngs-data" data-latlngs="<%= @microposts_for_map.pluck(:latlng).to_json %>"></div>
<%= @microposts_for_map.ids %>
<%= @microposts_for_map.pluck(:id) %>
<%= @microposts_for_map.pluck(:latlng) %>
<%= render 'microposts/micropost', micropost: @microposts_for_map.first %>


<script>
// railsに保存してあるstring型のlatlngをNumber型の配列に変換
function latlngToNumber(micropost_latlng) {
  const ll = micropost_latlng.replace(/\(/g, '').replace(/\)/g, '');
  const latlng = [Number(ll.split(',')[0]), Number(ll.split(',')[1])];
  return latlng;
}

const latlngs_data = document.getElementById('latlngs-data');
const strLatlngsArray = JSON.parse(latlngs_data.getAttribute('data-latlngs'));
const latlngsArray = [];
for( key in strLatlngsArray ) {
  latlngsArray.push( latlngToNumber(strLatlngsArray[key]) );
}

function mainMap(){
  const target = document.getElementById('main-map');
  const main_map = new google.maps.Map(target, {
    center: {lat: 37, lng: 140},
    zoom: 5,
    zoomControl: false,
    mapTypeControl: false,
    streetViewControl: false,
    mapTypeControlOptions: {
      style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
    },
    restriction: {
      latLngBounds: {
        north: 55.0,
        south: 20.0,
        west: 110.0,
        east: 170.0
      },
      strictBounds: false
    },
  });

  const latLngs = [];
  const markers = [];
  const infoWindows = [];
  latlngsArray.forEach( (latlng, i) => {
    latLngs[i] = { lat: latlng[0], lng: latlng[1] }
    markers[i] = new google.maps.Marker({
      position: latLngs[i],
      map: main_map
    });
    infoWindows[i] = new google.maps.InfoWindow({
      content: i+`<%= render 'microposts/micropost', micropost: @microposts_for_map.first %>`
    });
    markers[i].addListener('click', ()=> {
      for ( infoWindow of infoWindows ) {
        infoWindow.close();
      }
      main_map.panTo(latLngs[i]);
      infoWindows[i].open(main_map, markers[i]);
    });

    markers[i].addListener('dblclick', ()=> {
      main_map.panTo(latLngs[i]);
      main_map.setZoom(10);
    });
  });
  main_map.addListener('click', ()=> {
    for ( infoWindow of infoWindows ) {
      infoWindow.close();
    }
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?language=ja&region=JP&key=AIzaSyCIX7ci0yBU4r9axzQEvNd5nefZiifw1bM&libraries=places&callback=mainMap" async defer></script>